plugins {
    id 'com.github.johnrengelman.shadow' version '5.2.0'
    id 'de.fuerstenau.buildconfig' version '1.1.8'
    id 'java'
    id 'antlr'
    id 'maven'
}

version = '1.0.4'

sourceCompatibility = 1.8

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.5.2'

    antlr group: 'org.antlr', name: 'antlr4', version: '4.7.2'
    implementation group: 'org.antlr', name: 'antlr4-runtime', version: '4.7.2'

    implementation project(':core')

    implementation group: 'org.kordamp.ikonli', name: 'ikonli-swing', version: '2.4.0'
    implementation group: 'org.kordamp.ikonli', name: 'ikonli-materialdesign-pack', version: '2.4.0'

    implementation group: 'com.jtattoo', name: 'JTattoo', version: '1.6.13'

    implementation group: 'com.goebl', name: 'david-webb', version: '1.3.0'
    implementation group: 'org.json', name: 'json', version: '20190722'

    implementation group: 'com.fifesoft', name: 'rsyntaxtextarea', version: '3.0.4'
    implementation group: 'com.fifesoft', name: 'autocomplete', version: '3.0.2'
}

generateGrammarSource {
    arguments += ['-long-messages']
}

shadowJar {
    destinationDir = new File(rootProject.projectDir, 'build/release/')
    manifest {
        attributes 'Main-Class': 'xyz.algogo.desktop.AlgogoDesktop'
    }
    mergeServiceFiles()
}

task(runMain, dependsOn: 'classes', type: JavaExec) {
    main = 'xyz.algogo.desktop.AlgogoDesktop'
    classpath = sourceSets.main.runtimeClasspath
}